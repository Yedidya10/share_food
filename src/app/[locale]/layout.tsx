import type { Metadata } from "next";
import { notFound } from "next/navigation";
import { Geist, Geist_Mono } from "next/font/google";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { routing } from "@/i18n/routing";
import ThemeProvider from "@/components/theme/ThemeProvider";
import "./globals.css";
import OneTapComponent from "@/components/OneTapComponent";
import MainHeader from "@/components/layers/mainHeader/MainHeader";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function LocaleLayout({
  children,
  login,
  params,
}: Readonly<{
  children: React.ReactNode;
  login: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  const dir = locale === "he" ? "rtl" : "ltr";

  return (
    <html lang={locale} suppressHydrationWarning={true} dir={dir}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <OneTapComponent />
        <ThemeProvider
          attribute='class'
          defaultTheme='system'
          enableSystem
          disableTransitionOnChange
        >
          <NextIntlClientProvider>
            <MainHeader />
            <div className='pt-20' />
            {children}
            {login}
          </NextIntlClientProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
